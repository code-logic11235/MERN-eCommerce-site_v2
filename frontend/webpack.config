const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
  mode: 'development',  // Or 'production' for optimized builds
  entry: path.resolve(__dirname, "src/index.js"),  // Your entry point for the app
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'dist'),
  },
  module: {
    rules: [
      {
        test: /\.jsx?$/,  // Apply Babel to .js or .jsx files
        exclude: /node_modules/,  // Exclude node_modules (no need to transpile dependencies)
        use: {
          loader: 'babel-loader',  // Use babel-loader to transpile the files
          options: {
            presets: ['@babel/preset-env', '@babel/preset-react'],  // Use Babel presets for modern JS and React JSX
          },
        },
      },
      {
        test: /\.scss$/,
        use:['style-loader', 'css-loader','sass-loader'],
      },
      {
        test: /\.css$/, // To handle CSS files
        use: ['style-loader', 'css-loader'],
      },
    ],
  },
  plugins: [
    new HtmlWebpackPlugin({
      template: './public/index.html',  //adds the proper script tag to ur html so it will include the bundle 
    }),
  ],
  resolve: {
    extensions: ['.js', '.jsx'],  // Allow importing files without extensions, instead of (import App from './App.js') you can do (import App from './App'; )
  },
};